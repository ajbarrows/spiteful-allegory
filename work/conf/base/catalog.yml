# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html


gb_ts_pride_prej:
  type: text.TextDataSet
  filepath: data/02_intermediate/gutenberg_peter/narrative_ts/pride_prej.txt
gb_ts_frankenstein:
  type: text.TextDataSet
  filepath: data/02_intermediate/gutenberg_peter/narrative_ts/frankenstein.txt
gb_ts_moby_dick:
  type: text.TextDataSet
  filepath: data/02_intermediate/gutenberg_peter/narrative_ts/moby_dick.txt

gb_onegrams_pride_prej:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/gutenberg_peter/onegrams/pride_prej.txt
  load_args:
    sep: '\t'
    header:
    names: ['word', 'count']

gb_onegrams_frankenstein:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/gutenberg_peter/onegrams/frankenstein.txt
  load_args:
    sep: '\t'
    header: 
    names: ['word', 'count']

gb_onegrams_moby_dick:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/gutenberg_peter/onegrams/moby_dick.txt
  load_args:
    sep: '\t'
    header:
    names: ['word', 'count']


labMT:
  type: pandas.CSVDataSet
  filepath: data/03_primary/22040227-labMT_English.csv
  load_args:
    skiprows: 1 # supply column names, skip header
    names: ['rank', 'word', 'english', 'happiness', 'std']



############# project ###############

neurosynth_ds:
  type: pickle.PickleDataSet
  filepath: data/01_raw/neuro-text/neurosynth_dataset_with_abstracts.pkl.gz
  backend: joblib
neuroquery_ds:
  type: pickle.PickleDataSet
  filepath: data/01_raw/neuro-text/neuroquery_dataset_with_abstracts.pkl.gz
  backend: joblib

neurosynth_text:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/neurosynth_text.csv
neuroquery_text:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/neuroquery_text.csv

nq_cite:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/nq_citations.csv

combined_text:
  type: pandas.ParquetDataSet
  filepath: data/03_primary/combined_neuro_text.parquet


# reproducible set of randomly-selected texts
random_abstracts:
  type: pandas.CSVDataSet
  filepath: data/03_primary/random_abstracts.csv

rankcount:
  type: pandas.ParquetDataset
  filepath: data/03_primary/rankcount.parquet
rankcount_pos:
  type: pandas.ParquetDataSet
  filepath: data/03_primary/rankcount_pos.parquet

methods_corpus:
  type: text.TextDataSet
  filepath: data/04_feature/methods_corpus.txt

detected_text:
  type: pandas.ParquetDataSet
  filepath: data/04_feature/detected_text.parquet


# model output
lda_model:
  type: pickle.PickleDataSet
  filepath: data/06_models/lda_model_overall.pkl
bert_model:
  type: pickle.PickleDataSet
  filepath: data/06_models/bert_model_verall.pkl
overall_topics:
  type: pandas.CSVDataset
  filepath: data/07_model_output/overall_topics.csv

lda_group_models:
  type: pickle.PickleDataSet
  filepath: data/06_models/lda_group_models.pkl
bert_group_models:
  type: pickle.PickleDataSet
  filepath: data/06_models/bert_group_models.pkl
topics_by_year:
  type: pandas.CSVDataset
  filepath: data/07_model_output/topics_by_year.csv